{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","helper.js","componentes/Presupuesto.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","Formulario","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nombreGastoRef","React","createRef","cantidadGastoRef","crearGasto","bind","assertThisInitialized","e","preventDefault","gasto","nombreGasto","current","value","cantidadGasto","agregarGasto","currentTarget","reset","onSubmit","className","ref","type","placeholder","Component","Gasto","_this$props$gasto","parseFloat","toFixed","Listado","keys","gastos","reverse","map","key","componentes_Gasto","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","revisarPresupuesto","restante","Presupuesto","Restante","ControlPresupuesto","Fragment","componentes_Presupuesto","componentes_Restante","App","obtenerPresupuesto","prompt","setState","objectSpread","state","concat","Date","now","restarPresupuesto","cantidad","restar","Number","String","componentes_Header","componentes_Formulario","componentes_Listado","componentes_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a941fb8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n    return(\n    <header>\n        <h1>{props.titulo}</h1>\n    </header>\n    );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Formulario extends Component{\n\n    constructor(props){\n        super(props);\n\n        // ref para los campos del formulario\n        this.nombreGastoRef = React.createRef();\n        this.cantidadGastoRef = React.createRef();\n\n        // m√©todo crearGasto\n        this.crearGasto = this.crearGasto.bind(this);\n    }\n\n    crearGasto(e){\n        \n        // Prevenir el default\n        e.preventDefault();\n\n        // Crear el objeto con los datos\n        const gasto = {\n            nombreGasto: this.nombreGastoRef.current.value,\n            cantidadGasto: this.cantidadGastoRef.current.value\n        }\n\n        // console.log(gasto);\n\n        // Agrearlos y enviarlos por props\n        this.props.agregarGasto(gasto);\n\n        // Resetear el formulario (opcional)\n        e.currentTarget.reset();\n    }\n\n    render(){\n        return(\n            <form onSubmit={ this.crearGasto }>\n                <h2>Agrega tus gastos aqui</h2>\n                <div className=\"campo\">\n                    <label>Nombre Gasto</label>\n                    <input ref={ this.nombreGastoRef } className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Cantidad</label>\n                    <input ref={ this.cantidadGastoRef } className=\"u-full-width\" type=\"text\" placeholder=\"Ej. 300\" />\n                </div>\n\n                <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\n            </form>\n        );\n    }\n}\n\nFormulario.propTypes = {\n    agregarGasto: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Gasto extends Component {\n    render(){\n        const {cantidadGasto, nombreGasto} = this.props.gasto;\n        // console.log(cantidadGasto);\n        // console.log(nombreGasto);\n        return(\n            <li className=\"gastos\">\n                <p>\n                    {nombreGasto}\n                    <span className=\"gasto\">$ {parseFloat(cantidadGasto).toFixed(2)}</span>\n                </p>\n            </li>\n        );\n    }\n}\n\nGasto.propTypes = {\n    gasto: PropTypes.object.isRequired\n}\nexport default Gasto;","import React, {Component} from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nclass Listado extends Component{\n    render(){\n        return(\n        <div className=\"gastos-realizados\">\n            <h2>Listado</h2>\n            { Object.keys(this.props.gastos).reverse().map(key => (\n\n                <Gasto\n                    key={key}\n                    gasto={this.props.gastos[key]}\n                />\n\n            ) ) }\n        </div> \n        );\n    }\n}\n\n\nListado.propTypes = {\n    gastos: PropTypes.object.isRequired\n}\nexport default Listado;","export const validarPresupuesto = presupuesto => {\n    let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\n\n    if(totalPresupuesto > 0 ) {\n        return totalPresupuesto;\n    } else {\n        return false;\n    }\n}\n\nexport const revisarPresupuesto = (presupuesto,restante) => {\n    let clase;\n    // Comprobar el 25% \n    if( (presupuesto / 4) > restante) {\n         clase = 'alert alert-danger';\n    } else if( (presupuesto / 2) > restante) {\n        clase = 'alert alert-warning'\n    } else {\n        clase = 'alert alert alert-success';\n    }\n    return clase;\n} ","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Presupuesto extends Component {\n    render(){\n        return(\n            <div className=\"alert alert-primary\">\n                Presupuesto: $ {parseFloat(this.props.presupuesto).toFixed(2)}\n            </div>\n        );\n    }\n}\n\nPresupuesto.propTypes = {\n    presupuesto: PropTypes.string.isRequired\n}\nexport default Presupuesto;","import React, { Component } from 'react';\nimport {revisarPresupuesto} from '../helper';\nimport PropTypes from 'prop-types';\n\nclass Restante extends Component {\n    render() {\n\n        const presupuesto = this.props.presupuesto;\n        const restante = this.props.restante;\n\n        return (\n            <div className={revisarPresupuesto(presupuesto, restante)}>\n                Restante: $ {parseFloat(this.props.restante).toFixed(2)}\n            </div>\n        );\n    }\n}\n\nRestante.propTypes = {\n    presupuesto: PropTypes.string.isRequired,\n    restante: PropTypes.string.isRequired\n}\nexport default Restante;","import React, {Component} from 'react';\nimport Presupuesto from './Presupuesto';\nimport Restante from './Restante';\nimport PropTypes from 'prop-types';\n\nclass ControlPresupuesto extends Component {\n    render(){\n        return(\n            <React.Fragment>\n                <Presupuesto \n                    presupuesto = {this.props.presupuesto}\n                />\n                <Restante \n                    presupuesto = {this.props.presupuesto}\n                    restante = {this.props.restante}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nControlPresupuesto.propTypes = {\n    presupuesto: PropTypes.string.isRequired,\n    restante: PropTypes.string.isRequired\n}\nexport default ControlPresupuesto;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport {validarPresupuesto} from '../helper';\nimport ControlPresupuesto from './ControlPresupuesto';\nimport '../css/App.css';\n\nclass App extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpresupuesto: '',\n\t\t\trestante: '',\n\t\t\tgastos: {}\n\t\t};\n\t\t// this.agregarGasto = this.agregarGasto.bind(this);\n\t}\n\t\n\n\tcomponentDidMount() { // esto es como si fuera un document.ready\n\t\tthis.obtenerPresupuesto();\n\t}\n\n\tobtenerPresupuesto = () => {\n\t\tlet presupuesto = prompt('Cu√°l es el presupuesto?');\n\n\t\tlet resultado = validarPresupuesto(presupuesto);\n\t\tif (resultado) {\n\t\t\tthis.setState({\n\t\t\t\tpresupuesto: presupuesto,\n\t\t\t\trestante: presupuesto // el restante ser√° igual al presupuesto al inicio porque aun no hemos gastado nada\n\t\t\t});\n\t\t} else {\n\t\t\tthis.obtenerPresupuesto();\n\t\t}\n\t}\n\n\t// Agregar un nuevo gasto al State\n\n\n\tagregarGasto = gasto => {\n\n\t\t// Tomar copia del state actual\n\n\t\tconst gastos = {...this.state.gastos};\n\t\t// console.log(`Se agrego el gasto ${this.agregarGasto}`);\n\t\t// console.log(gastos);\n\n\t\t// agregar al gasto el objeto del state\n\t\tgastos[`gasto${Date.now()}`] = gasto;\n\t\t// console.log(gastos);\n\n\t\t// restar al presupuesto\n\n\t\tthis.restarPresupuesto(gasto.cantidadGasto);\n\n\t\t// ponelo en el state\n\t\tthis.setState({\n\t\t\tgastos: gastos\n\t\t});\n\n\t}\n\n\t// Restar del presupuesto cuando un gasto se creo\n\n\trestarPresupuesto = cantidad => {\n\t\t// leer el gasto\n\t\t//typeof devuelve el tipo de dato de la variable\n\t\tlet restar = Number(cantidad);\n\n\t\t// Tomar copia del state actual\n\t\tlet restante = this.state.restante;\n\t\t\n\t\t// lo restamos\n\t\trestante -= restar;\n\n\t\trestante = String(restante);\n\n\t\t// agregamos el nuevo state\n\t\tthis.setState({\n\t\t\trestante: restante\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App container\">\n\t\t\t\n\t\t\t\t<Header titulo=\"Gastos Semanales\"/>\n\n\t\t\t\t<div className=\"contenido-principal contenido\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"one-half column\">\n\n\t\t\t\t\t\t<Formulario \n\t\t\t\t\t\t\tagregarGasto={ this.agregarGasto }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t<Listado \n\t\t\t\t\t\t\tgastos={this.state.gastos}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ControlPresupuesto \n\t\t\t\t\t\t\tpresupuesto = {this.state.presupuesto}\n\t\t\t\t\t\t\trestante = {this.state.restante}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>            \n\t\t\t\t\t</div> \n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}